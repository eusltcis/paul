<?php
// Function to generate Pascal's Triangle
function generatePascalsTriangle($rows) {
    $triangle = array();
    
    for ($i = 0; $i < $rows; $i++) {
        $triangle[$i] = array();
        for ($j = 0; $j <= $i; $j++) {
            if ($j == 0 || $j == $i) {
                $triangle[$i][$j] = 1;
            } else {
                $triangle[$i][$j] = $triangle[$i - 1][$j - 1] + $triangle[$i - 1][$j];
            }
        }
    }
    
    return $triangle;
}

// Function to print Pascal's Triangle in a semi-reflected format
function printPascalsTriangle($triangle) {
    $rows = count($triangle);
    
    for ($i = 0; $i < $rows; $i++) {
        // Add spaces for alignment
        for ($space = 0; $space < $rows - $i - 1; $space++) {
            echo "&nbsp;&nbsp;"; // Use non-breaking spaces for HTML
        }
        
        // Print the numbers in the row
        for ($j = 0; $j <= $i; $j++) {
            echo $triangle[$i][$j] . "&nbsp;&nbsp;";
        }
        echo "<br>";
    }
}

// Get user input for the number of rows
if (isset($_POST['submit'])) {
    $rows = intval($_POST['rows']);
    if ($rows > 0) {
        $triangle = generatePascalsTriangle($rows);
        printPascalsTriangle($triangle);
    } else {
        echo "Please enter a valid number of rows.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Pascal's Triangle (Semi-Reflected)</title>
</head>
<body>
    <h1>Pascal's Triangle (Semi-Reflected)</h1>
    <form method="post">
        <label for="rows">Enter the number of rows:</label>
        <input type="number" id="rows" name="rows" min="1" required>
        <button type="submit" name="submit">Generate</button>
    </form>
</body>
</html>








<form action="" method="get">
    <label>Enter book name to search : </label>
    <input type="text" name="booktitle" required>

    <button name="search" type="submit">Search</button>

    <?php
        if (isset($_GET['status'])) {
            if ($_GET['status'] === 'failed') {
                echo "<br>No Books Found" ;
            }
        }
    ?>


</form>


<?php
require "dbconnection.php" ;

if (isset($_GET['search'])) {
    $booktitle = $_GET['booktitle'] ;

    $search = "SELECT * from book_details WHERE title LIKE '%$booktitle%' " ;

    $result = $connection->query($search) ; 

    if ($result->num_rows > 0) {
        foreach ($result as $row) { 
            echo "<p>ISBN: ".$row['isbn']."</p>";
            echo "<p>Title: ".$row['title']."</p>";
            echo "<p>Author: ".$row['author']."</p>";
            echo "<p>Edition: ".$row['edition']."</p>";
            echo "<p>Publication: ".$row['publication']."</p>";
            echo "<hr>";
        } 
    } else {
        header("Location: search_books.php?status=failed") ; 
    }
}

?>


// matrix


<?php
echo "Matrix Operations"; 

if (isset($_POST['submit'])) {
    $row1 = $_POST['row1'];
    $col1 = $_POST['col1'];
    $row2 = $_POST['row2'];
    $col2 = $_POST['col2'];
    $opr = $_POST['opr']; 

    // Check if matrix operation is possible
    $valid = false;
    if ($opr == '*' && $col1 == $row2) {
        $valid = true;
    } elseif (($opr == '+' || $opr == '-') && ($row1 == $row2 && $col1 == $col2)) {
        $valid = true;
    }

    if ($valid) {
        echo "<form action='' method='POST'>";
        echo "First Matrix<br>"; 
        for ($i = 0; $i < $row1; $i++) {
            for ($j = 0; $j < $col1; $j++) {
                echo "<input name='mat1{$i}{$j}' required> ";
            }
            echo "<br>"; 
        }

        echo "Second Matrix<br>"; 
        for ($i = 0; $i < $row2; $i++) {
            for ($j = 0; $j < $col2; $j++) {
                echo "<input name='mat2{$i}{$j}' required> ";
            }
            echo "<br>"; 
        }

        // Hidden Inputs to pass matrix dimensions and operation
        echo "<button type='submit' name='calc'>Calculate</button>";
        echo "<input type='hidden' name='row1' value='$row1'>";
        echo "<input type='hidden' name='col1' value='$col1'>";
        echo "<input type='hidden' name='row2' value='$row2'>";
        echo "<input type='hidden' name='col2' value='$col2'>";
        echo "<input type='hidden' name='opr' value='$opr'>";
        echo "</form>";

    } else {
        echo "<script>alert('Matrix operation not possible with the given dimensions');</script>";
        header("Refresh:0"); // Refreshes the page
    }
}

// Processing Matrix Calculation
if (isset($_POST['calc'])) {
    $row1 = $_POST['row1'];
    $col1 = $_POST['col1'];
    $row2 = $_POST['row2'];
    $col2 = $_POST['col2'];
    $opr = $_POST['opr']; 

    $matrix1 = array(); 
    $matrix2 = array(); 

    // Retrieving First Matrix
    for ($i = 0; $i < $row1; $i++) {
        for ($j = 0; $j < $col1; $j++) {
            $matrix1[$i][$j] = $_POST["mat1{$i}{$j}"];
        }
    }

    // Retrieving Second Matrix
    for ($i = 0; $i < $row2; $i++) {
        for ($j = 0; $j < $col2; $j++) {
            $matrix2[$i][$j] = $_POST["mat2{$i}{$j}"];
        }
    }

    // Performing Matrix Operations
    $result = array();

    switch ($opr) {
        case '+': // Matrix Addition
            for ($i = 0; $i < $row1; $i++) {
                for ($j = 0; $j < $col1; $j++) {
                    $result[$i][$j] = $matrix1[$i][$j] + $matrix2[$i][$j];
                }
            }
            break;

        case '-': // Matrix Subtraction
            for ($i = 0; $i < $row1; $i++) {
                for ($j = 0; $j < $col1; $j++) {
                    $result[$i][$j] = $matrix1[$i][$j] - $matrix2[$i][$j];
                }
            }
            break;

        case '*': // Matrix Multiplication
            for ($i = 0; $i < $row1; $i++) {
                for ($j = 0; $j < $col2; $j++) {
                    $result[$i][$j] = 0;
                    for ($k = 0; $k < $col1; $k++) {
                        $result[$i][$j] += $matrix1[$i][$k] * $matrix2[$k][$j];
                    }
                }
            }
            break;

        default:
            echo "Invalid Operator!";
            break;
    }

    // Displaying Result
    echo "<h3>Result Matrix:</h3>";
    for ($i = 0; $i < count($result); $i++) {
        for ($j = 0; $j < count($result[0]); $j++) {
            echo $result[$i][$j] . " ";
        }
        echo "<br>";
    }
}
?>

<html>
<body>
    <form action="" method="POST">
        <label>First Matrix:</label><br>
        <input type="number" name="row1" placeholder="Rows" required>
        <input type="number" name="col1" placeholder="Columns" required><br>

        <label>Operator (+, -, *):</label>
        <input type="text" name="opr" placeholder="Operator" required><br>

        <label>Second Matrix:</label><br>
        <input type="number" name="row2" placeholder="Rows" required>
        <input type="number" name="col2" placeholder="Columns" required><br>

        <button name="submit" type="submit">Submit</button>
    </form>
</body>
</html>









