//pascal

<?php
function generatePascalsTriangle($rows) {
    $triangle = array();
    
    for ($i = 0; $i < $rows; $i++) {
        $triangle[$i] = array();
        for ($j = 0; $j <= $i; $j++) {
            if ($j == 0 || $j == $i) {
                $triangle[$i][$j] = 1;
            } else {
                $triangle[$i][$j] = $triangle[$i - 1][$j - 1] + $triangle[$i - 1][$j];
            }
        }
    }
    
    return $triangle;
}

function printPascalsTriangle($triangle) {
    $rows = count($triangle);
    
    for ($i = 0; $i < $rows; $i++) {
        for ($space = 0; $space < $rows - $i - 1; $space++) {
            echo "&nbsp;&nbsp;"; // Use non-breaking spaces for HTML
        }
        
        for ($j = 0; $j <= $i; $j++) {
            echo $triangle[$i][$j] . "&nbsp;&nbsp;";
        }
        echo "<br>";
    }
}


if (isset($_POST['submit'])) {
    $rows = intval($_POST['rows']);
    if ($rows > 0) {
        $triangle = generatePascalsTriangle($rows);
        printPascalsTriangle($triangle);
    } else {
        echo "Please enter a valid number of rows.";
    }
}
?>

<!DOCTYPE html>
<html>
<head>
    <title>Pascal's Triangle (Semi-Reflected)</title>
</head>
<body>
    <h1>Pascal's Triangle (Semi-Reflected)</h1>
    <form method="post">
        <label for="rows">Enter the number of rows:</label>
        <input type="number" id="rows" name="rows" min="1" required>
        <button type="submit" name="submit">Generate</button>
    </form>
</body>
</html>



//dbconnection


CREATE DATABASE library_db;

USE library_db;

CREATE TABLE books (
    id INT AUTO_INCREMENT PRIMARY KEY,
    isbn VARCHAR(20) NOT NULL,
    title VARCHAR(255) NOT NULL,
    author VARCHAR(100) NOT NULL,
    edition VARCHAR(50),
    publication VARCHAR(100)
);



<!DOCTYPE html>
<html>
<head>
    <title>Simple Library Management System</title>
</head>
<body>
    <h2>Simple Library Management System</h2>
    <form action="insert_books.php" method="post">
        <label>Enter ISBN:</label>
        <input type="text" name="isbn" required><br>

        <label>Enter Title:</label>
        <input type="text" name="title" required><br>

        <label>Enter Author:</label>
        <input type="text" name="author" required><br>

        <label>Enter Edition:</label>
        <input type="text" name="edition"><br>

        <label>Enter Publication:</label>
        <input type="text" name="publication"><br>

        <input type="submit" value="Submit">
        <input type="reset" value="Reset">
    </form>

    <p>New record created successfully</p>
    <a href="search_book.php">To search for the Book information click here</a>
</body>
</html>



<?php
$servername = "localhost";
$username = "root";  // Change if needed
$password = "";  // Change if needed
$dbname = "library_db";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>



<?php
include 'DbConnection.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $isbn = $_POST['isbn'];
    $title = $_POST['title'];
    $author = $_POST['author'];
    $edition = $_POST['edition'];
    $publication = $_POST['publication'];

    $sql = "INSERT INTO books (isbn, title, author, edition, publication) 
            VALUES ('$isbn', '$title', '$author', '$edition', '$publication')";

    if ($conn->query($sql) === TRUE) {
        echo "New record created successfully. <a href='page.php'>Go back</a>";
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }
}
$conn->close();
?>


<!DOCTYPE html>
<html>
<head>
    <title>Search Book</title>
</head>
<body>
    <h2>Search for a Book</h2>
    <form method="GET">
        <input type="text" name="query" placeholder="Enter book title">
        <input type="submit" value="Search">
    </form>

    <?php
    include 'DbConnection.php';

    if (isset($_GET['query'])) {
        $search = $_GET['query'];
        $sql = "SELECT * FROM books WHERE title LIKE '%$search%'";
        $result = $conn->query($sql);

        if ($result->num_rows > 0) {
            echo "<h3>Search Results:</h3>";
            while ($row = $result->fetch_assoc()) {
                echo "ISBN: " . $row['isbn'] . "<br>";
                echo "Title: " . $row['title'] . "<br>";
                echo "Author: " . $row['author'] . "<br>";
                echo "Edition: " . $row['edition'] . "<br>";
                echo "Publication: " . $row['publication'] . "<br><hr>";
            }
        } else {
            echo "No records found.";
        }
    }
    $conn->close();
    ?>
</body>
</html>


// matrix


<?php
echo "Matrix Operations"; 

if (isset($_POST['submit'])) {
    $row1 = $_POST['row1'];
    $col1 = $_POST['col1'];
    $row2 = $_POST['row2'];
    $col2 = $_POST['col2'];
    $opr = $_POST['opr']; 

    // Check if matrix operation is possible
    $valid = false;
    if ($opr == '*' && $col1 == $row2) {
        $valid = true;
    } elseif (($opr == '+' || $opr == '-') && ($row1 == $row2 && $col1 == $col2)) {
        $valid = true;
    }

    if ($valid) {
        echo "<form action='' method='POST'>";
        echo "First Matrix<br>"; 
        for ($i = 0; $i < $row1; $i++) {
            for ($j = 0; $j < $col1; $j++) {
                echo "<input name='mat1{$i}{$j}' required> ";
            }
            echo "<br>"; 
        }

        echo "Second Matrix<br>"; 
        for ($i = 0; $i < $row2; $i++) {
            for ($j = 0; $j < $col2; $j++) {
                echo "<input name='mat2{$i}{$j}' required> ";
            }
            echo "<br>"; 
        }

        // Hidden Inputs to pass matrix dimensions and operation
        echo "<button type='submit' name='calc'>Calculate</button>";
        echo "<input type='hidden' name='row1' value='$row1'>";
        echo "<input type='hidden' name='col1' value='$col1'>";
        echo "<input type='hidden' name='row2' value='$row2'>";
        echo "<input type='hidden' name='col2' value='$col2'>";
        echo "<input type='hidden' name='opr' value='$opr'>";
        echo "</form>";

    } else {
        echo "<script>alert('Matrix operation not possible with the given dimensions');</script>";
        header("Refresh:0"); // Refreshes the page
    }
}

// Processing Matrix Calculation
if (isset($_POST['calc'])) {
    $row1 = $_POST['row1'];
    $col1 = $_POST['col1'];
    $row2 = $_POST['row2'];
    $col2 = $_POST['col2'];
    $opr = $_POST['opr']; 

    $matrix1 = array(); 
    $matrix2 = array(); 

    // Retrieving First Matrix
    for ($i = 0; $i < $row1; $i++) {
        for ($j = 0; $j < $col1; $j++) {
            $matrix1[$i][$j] = $_POST["mat1{$i}{$j}"];
        }
    }

    // Retrieving Second Matrix
    for ($i = 0; $i < $row2; $i++) {
        for ($j = 0; $j < $col2; $j++) {
            $matrix2[$i][$j] = $_POST["mat2{$i}{$j}"];
        }
    }

    // Performing Matrix Operations
    $result = array();

    switch ($opr) {
        case '+': // Matrix Addition
            for ($i = 0; $i < $row1; $i++) {
                for ($j = 0; $j < $col1; $j++) {
                    $result[$i][$j] = $matrix1[$i][$j] + $matrix2[$i][$j];
                }
            }
            break;

        case '-': // Matrix Subtraction
            for ($i = 0; $i < $row1; $i++) {
                for ($j = 0; $j < $col1; $j++) {
                    $result[$i][$j] = $matrix1[$i][$j] - $matrix2[$i][$j];
                }
            }
            break;

        case '*': // Matrix Multiplication
            for ($i = 0; $i < $row1; $i++) {
                for ($j = 0; $j < $col2; $j++) {
                    $result[$i][$j] = 0;
                    for ($k = 0; $k < $col1; $k++) {
                        $result[$i][$j] += $matrix1[$i][$k] * $matrix2[$k][$j];
                    }
                }
            }
            break;

        default:
            echo "Invalid Operator!";
            break;
    }

    // Displaying Result
    echo "<h3>Result Matrix:</h3>";
    for ($i = 0; $i < count($result); $i++) {
        for ($j = 0; $j < count($result[0]); $j++) {
            echo $result[$i][$j] . " ";
        }
        echo "<br>";
    }
}
?>

<html>
<body>
    <form action="" method="POST">
        <label>First Matrix:</label><br>
        <input type="number" name="row1" placeholder="Rows" required>
        <input type="number" name="col1" placeholder="Columns" required><br>

        <label>Operator (+, -, *):</label>
        <input type="text" name="opr" placeholder="Operator" required><br>

        <label>Second Matrix:</label><br>
        <input type="number" name="row2" placeholder="Rows" required>
        <input type="number" name="col2" placeholder="Columns" required><br>

        <button name="submit" type="submit">Submit</button>
    </form>
</body>
</html>





//sort  array

<?php
function selectionSort($arr) {
    $n = count($arr);
    
    for ($i = 0; $i < $n - 1; $i++) {
        $minIndex = $i;

        for ($j = $i + 1; $j < $n; $j++) {
            if ($arr[$j] < $arr[$minIndex]) {
                $minIndex = $j;
            }
        }

        if ($minIndex != $i) {
            $temp = $arr[$i];
            $arr[$i] = $arr[$minIndex];
            $arr[$minIndex] = $temp;
        }
    }
    
    return $arr;
}

$array = [7, 1, 4, 2, 3];

echo "Original array: " . implode(", ", $array) . "\n";

$sortedArray = selectionSort($array);

echo "Sorted array: " . implode(", ", $sortedArray) . "\n";
?>




